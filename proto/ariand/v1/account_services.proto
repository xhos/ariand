syntax = "proto3";

package ariand.v1;

import "ariand/v1/account.proto";
import "ariand/v1/enums.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/money.proto";

option go_package = "ariand/gen/go/ariand/v1;ariandv1";

// Account management service
service AccountService {
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse);
  rpc SetAccountAnchor(SetAccountAnchorRequest) returns (SetAccountAnchorResponse);
  rpc GetAccountBalance(GetAccountBalanceRequest) returns (GetAccountBalanceResponse);
  rpc GetAccountsCount(GetAccountsCountRequest) returns (GetAccountsCountResponse);
  rpc SyncAccountBalances(SyncAccountBalancesRequest) returns (SyncAccountBalancesResponse);
}

message ListAccountsRequest {
  string user_id = 1; // UUID
}

message ListAccountsResponse {
  repeated Account accounts = 1;
}

message GetAccountRequest {
  string user_id = 1; // UUID
  int64 id = 2;
}

message GetAccountResponse {
  Account account = 1;
}

message CreateAccountRequest {
  string user_id = 1; // UUID (becomes owner_id)
  string name = 2;
  string bank = 3;
  AccountType type = 4;
  optional string alias = 5;
  google.type.Money anchor_balance = 6;
}

message CreateAccountResponse {
  Account account = 1;
}

message UpdateAccountRequest {
  string user_id = 1; // UUID (must be owner)
  int64 id = 2;
  google.protobuf.FieldMask update_mask = 3;
  
  // Fields that can be updated
  optional string name = 4;
  optional string bank = 5;
  optional AccountType account_type = 6;
  optional string alias = 7;
  optional google.protobuf.Timestamp anchor_date = 8;
  optional google.type.Money anchor_balance = 9;
}

message UpdateAccountResponse {
  Account account = 1;
}

message DeleteAccountRequest {
  string user_id = 1; // UUID (must be owner)
  int64 id = 2;
}

message DeleteAccountResponse {
  int64 affected_rows = 1;
}

message SetAccountAnchorRequest {
  int64 id = 1;
  google.type.Money balance = 2;
}

message SetAccountAnchorResponse {
  int64 affected_rows = 1;
}

message GetAccountBalanceRequest {
  int64 id = 1;
}

message GetAccountBalanceResponse {
  google.type.Money balance = 1;
}

message GetAccountsCountRequest {
  string user_id = 1; // UUID
}

message GetAccountsCountResponse {
  int64 count = 1;
}

message SyncAccountBalancesRequest {
  int64 account_id = 1;
}

message SyncAccountBalancesResponse {}

// Account collaboration service
service AccountCollaborationService {
  rpc AddCollaborator(AddCollaboratorRequest) returns (AddCollaboratorResponse);
  rpc RemoveCollaborator(RemoveCollaboratorRequest) returns (RemoveCollaboratorResponse);
  rpc ListCollaborators(ListCollaboratorsRequest) returns (ListCollaboratorsResponse);
  rpc ListUserCollaborations(ListUserCollaborationsRequest) returns (ListUserCollaborationsResponse);
  rpc LeaveCollaboration(LeaveCollaborationRequest) returns (LeaveCollaborationResponse);
  rpc TransferOwnership(TransferOwnershipRequest) returns (TransferOwnershipResponse);
}

message AddCollaboratorRequest {
  string owner_user_id = 1; // UUID
  int64 account_id = 2;
  string collaborator_user_id = 3; // UUID
}

message AddCollaboratorResponse {
  AccountCollaborator collaborator = 1;
}

message RemoveCollaboratorRequest {
  string owner_user_id = 1; // UUID
  int64 account_id = 2;
  string collaborator_user_id = 3; // UUID
}

message RemoveCollaboratorResponse {
  int64 affected_rows = 1;
}

message ListCollaboratorsRequest {
  string requesting_user_id = 1; // UUID
  int64 account_id = 2;
}

message ListCollaboratorsResponse {
  repeated AccountCollaborator collaborators = 1;
}

message ListUserCollaborationsRequest {
  string user_id = 1; // UUID
}

message ListUserCollaborationsResponse {
  repeated AccountCollaboration collaborations = 1;
}

message LeaveCollaborationRequest {
  string user_id = 1; // UUID
  int64 account_id = 2;
}

message LeaveCollaborationResponse {
  int64 affected_rows = 1;
}

message TransferOwnershipRequest {
  string current_owner_id = 1; // UUID
  int64 account_id = 2;
  string new_owner_id = 3; // UUID
}

message TransferOwnershipResponse {
  int64 affected_rows = 1;
}