basePath: /
definitions:
  domain.Account:
    properties:
      alias:
        type: string
      anchor_balance:
        type: number
      anchor_date:
        type: string
      bank:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  domain.Transaction:
    properties:
      account_id:
        type: integer
      balance_after:
        type: number
      category:
        type: string
      email_id:
        type: string
      exchange_rate:
        type: number
      foreign_amount:
        type: number
      foreign_currency:
        type: string
      id:
        type: integer
      merchant:
        type: string
      tx_amount:
        type: number
      tx_currency:
        type: string
      tx_date:
        type: string
      tx_desc:
        type: string
      tx_direction:
        type: string
      user_notes:
        type: string
    type: object
  domain.TrendPoint:
    properties:
      date:
        type: string
      expense:
        type: number
      income:
        type: number
    type: object
  handlers.BalanceResponse:
    properties:
      balance:
        example: 1234.56
        type: number
    type: object
  handlers.CreateTransactionResponse:
    properties:
      id:
        example: 101
        type: integer
    type: object
  handlers.Cursor:
    properties:
      date:
        type: string
      id:
        type: integer
    type: object
  handlers.DebtResponse:
    properties:
      debt:
        example: 2550.75
        type: number
    type: object
  handlers.HTTPError:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: internal server error
        type: string
    type: object
  handlers.ListTransactionsResponse:
    properties:
      next_cursor:
        $ref: '#/definitions/handlers.Cursor'
      transactions:
        items:
          $ref: '#/definitions/domain.Transaction'
        type: array
    type: object
  handlers.SetAnchorRequest:
    properties:
      balance:
        example: 1234.56
        type: number
    type: object
  handlers.UpdateTransactionRequest:
    additionalProperties: {}
    type: object
info:
  contact: {}
  description: backend for arian
  title: Ariand API
  version: "1.0"
paths:
  /api/accounts:
    get:
      description: Returns a list of all accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Account'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: List all accounts
      tags:
      - accounts
  /api/accounts/{id}:
    get:
      description: Returns a single account by its numeric ID.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get account by ID
      tags:
      - accounts
  /api/accounts/{id}/anchor:
    post:
      consumes:
      - application/json
      description: Defines a true balance for an account at the current time. This
        anchor is the starting point for all balance calculations.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Anchor Payload (balance only)
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.SetAnchorRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request payload
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Set account anchor to now
      tags:
      - accounts
  /api/accounts/{id}/balance:
    get:
      description: Returns the current calculated balance of an account based on its
        anchor and subsequent transactions.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BalanceResponse'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get current balance
      tags:
      - accounts
  /api/dashboard/balance:
    get:
      description: Calculates and returns the sum of current balances across all accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BalanceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get total balance
      tags:
      - dashboard
  /api/dashboard/debt:
    get:
      description: Calculates and returns the sum of current balances for all 'credit_card'
        type accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DebtResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get total debt
      tags:
      - dashboard
  /api/dashboard/trends:
    get:
      description: Returns daily aggregated income and expense totals over a specified
        date range.
      parameters:
      - description: Start date for trend data (YYYY-MM-DD)
        in: query
        name: start
        type: string
      - description: End date for trend data (YYYY-MM-DD)
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.TrendPoint'
            type: array
        "400":
          description: invalid date format
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get income & expense trends
      tags:
      - dashboard
  /api/transactions:
    get:
      description: Returns a paginated and filtered list of transactions, ideal for
        infinite scrolling.
      parameters:
      - default: 25
        description: Number of transactions to return per page
        in: query
        name: limit
        type: integer
      - description: Cursor date from the previous page (RFC3339)
        in: query
        name: cursor_date
        type: string
      - description: Cursor ID from the previous page
        in: query
        name: cursor_id
        type: integer
      - description: Filter by start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Filter by end date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: Filter by minimum transaction amount
        in: query
        name: amount_min
        type: number
      - description: Filter by maximum transaction amount
        in: query
        name: amount_max
        type: number
      - description: Filter by transaction direction ('in' or 'out')
        in: query
        name: direction
        type: string
      - description: Filter by a specific currency (e.g., 'USD')
        in: query
        name: currency
        type: string
      - description: Comma-separated list of categories to filter by
        in: query
        name: categories
        type: string
      - description: Comma-separated list of account IDs to filter by
        in: query
        name: account_ids
        type: string
      - description: Search term for the merchant field (case-insensitive)
        in: query
        name: merchant
        type: string
      - description: Search term for the description field (case-insensitive)
        in: query
        name: description
        type: string
      - description: Filter by start time of day (HH:MM:SS)
        in: query
        name: time_start
        type: string
      - description: Filter by end time of day (HH:MM:SS)
        in: query
        name: time_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ListTransactionsResponse'
        "400":
          description: invalid query parameter
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: List transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Adds a new transaction to the database.
      parameters:
      - description: Transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/domain.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateTransactionResponse'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "409":
          description: duplicate transaction
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Create a new transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: Deletes a transaction by its numeric ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete a transaction
      tags:
      - transactions
    get:
      description: Retrieves a transaction by its numeric ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Get a single transaction
      tags:
      - transactions
    patch:
      consumes:
      - application/json
      description: Partially updates a transaction's fields. Only the provided fields
        will be changed.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to update
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateTransactionRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - BearerAuth: []
      summary: Update a transaction
      tags:
      - transactions
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and a valid API key.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
