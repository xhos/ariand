basePath: /
definitions:
  domain.Account:
    properties:
      alias:
        type: string
      anchorBalance:
        type: number
      anchorDate:
        type: string
      bank:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  domain.Category:
    properties:
      color:
        type: string
      id:
        type: integer
      label:
        type: string
      slug:
        type: string
    type: object
  domain.Transaction:
    properties:
      accountId:
        type: integer
      balanceAfter:
        type: number
      catStatus:
        type: string
      categoryId:
        type: integer
      categorySlug:
        type: string
      emailId:
        type: string
      exchangeRate:
        type: number
      foreignAmount:
        type: number
      foreignCurrency:
        type: string
      id:
        type: integer
      merchant:
        type: string
      suggestions:
        items:
          type: string
        type: array
      txAmount:
        type: number
      txCurrency:
        type: string
      txDate:
        type: string
      txDesc:
        type: string
      txDirection:
        type: string
      userNotes:
        type: string
    type: object
  domain.TrendPoint:
    properties:
      date:
        type: string
      expenses:
        type: number
      income:
        type: number
    type: object
  handlers.BalanceResponse:
    properties:
      balance:
        example: 1234.56
        type: number
    type: object
  handlers.CreateAccountRequest:
    properties:
      alias:
        example: main
        type: string
      anchor_balance:
        example: 1234.56
        type: number
      bank:
        example: big bank inc.
        type: string
      name:
        example: main chequing
        type: string
      type:
        example: chequing
        type: string
    type: object
  handlers.CreateCategoryRequest:
    properties:
      color:
        example: '#FFD700'
        type: string
      label:
        example: Groceries
        type: string
      slug:
        example: food.groceries
        type: string
    type: object
  handlers.CreateCategoryResponse:
    properties:
      id:
        example: 101
        type: integer
    type: object
  handlers.CreateTransactionResponse:
    properties:
      id:
        example: 101
        type: integer
    type: object
  handlers.Cursor:
    properties:
      date:
        type: string
      id:
        type: integer
    type: object
  handlers.DebtResponse:
    properties:
      debt:
        example: 2550.75
        type: number
    type: object
  handlers.ErrorResponse:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: resource not found
        type: string
    type: object
  handlers.ListTransactionsResponse:
    properties:
      nextCursor:
        $ref: '#/definitions/handlers.Cursor'
      transactions:
        items:
          $ref: '#/definitions/domain.Transaction'
        type: array
    type: object
  handlers.SetAnchorRequest:
    properties:
      balance:
        example: 1234.56
        type: number
    type: object
  handlers.UpdateCategoryRequest:
    additionalProperties: {}
    type: object
  handlers.UpdateTransactionRequest:
    additionalProperties: {}
    type: object
info:
  contact: {}
  description: backend for arian
  title: Ariand API
  version: 0.1.0
paths:
  /api/accounts:
    get:
      description: Returns a list of all accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Account'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: Adds a new account to the database.
      parameters:
      - description: new account object
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new account
      tags:
      - accounts
  /api/accounts/{id}:
    delete:
      description: Deletes an account and all of its associated transactions.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an account
      tags:
      - accounts
    get:
      description: Returns a single account by its numeric ID.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get account by ID
      tags:
      - accounts
  /api/accounts/{id}/anchor:
    post:
      consumes:
      - application/json
      description: Updates the anchor balance for an account and sets the anchor date
        to now.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Anchor Payload (balance only)
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.SetAnchorRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request payload or id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update account anchor
      tags:
      - accounts
  /api/accounts/{id}/balance:
    get:
      description: Returns the current calculated balance of an account.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BalanceResponse'
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: account not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current balance
      tags:
      - accounts
  /api/categories:
    get:
      description: Returns a list of all transaction categories.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Adds a new category to the database. If color is omitted, a random
        one is assigned.
      parameters:
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateCategoryResponse'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - categories
  /api/categories/{id}:
    delete:
      description: Deletes a category by its numeric ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: category not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a category
      tags:
      - categories
    get:
      description: Retrieves a category by its numeric ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: category not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a single category
      tags:
      - categories
    patch:
      consumes:
      - application/json
      description: Partially updates a category's fields. Only the provided fields
        will be changed.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to update (e.g., {\
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCategoryRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: category not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a category
      tags:
      - categories
  /api/dashboard/balance:
    get:
      description: Calculates and returns the sum of current balances across all accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BalanceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get total balance
      tags:
      - dashboard
  /api/dashboard/debt:
    get:
      description: Calculates and returns the sum of current balances for all 'credit_card'
        type accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DebtResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get total debt
      tags:
      - dashboard
  /api/dashboard/trends:
    get:
      description: Returns daily aggregated income and expense totals over a specified
        date range.
      parameters:
      - description: Start date for trend data (YYYY-MM-DD)
        in: query
        name: start
        type: string
      - description: End date for trend data (YYYY-MM-DD)
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.TrendPoint'
            type: array
        "400":
          description: invalid date format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get income & expense trends
      tags:
      - dashboard
  /api/transactions:
    get:
      description: returns a paginated and filtered list of transactions
      parameters:
      - default: 25
        description: page size
        in: query
        name: limit
        type: integer
      - description: cursor date from previous page (rfc3339nano)
        in: query
        name: cursor_date
        type: string
      - description: cursor id from previous page
        in: query
        name: cursor_id
        type: integer
      - description: comma-separated list of account ids
        in: query
        name: account_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ListTransactionsResponse'
        "400":
          description: invalid query parameter
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: list transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: adds a new transaction to the database
      parameters:
      - description: transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/domain.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateTransactionResponse'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: duplicate transaction
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: create a new transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: deletes a transaction by its numeric id
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: delete a transaction
      tags:
      - transactions
    get:
      description: retrieves a transaction by its numeric id
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: invalid id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get a single transaction
      tags:
      - transactions
    patch:
      consumes:
      - application/json
      description: partially updates a transaction's fields
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: integer
      - description: fields to update
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateTransactionRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request body or id format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: transaction not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: update a transaction
      tags:
      - transactions
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and a valid API key.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
