{
    "swagger": "2.0",
    "info": {
        "description": "backend for arian",
        "title": "Ariand API",
        "contact": {},
        "version": "0.1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/accounts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all accounts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List all accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Account"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new account to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "new account object",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Account"
                        }
                    },
                    "400": {
                        "description": "invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single account by its numeric ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Account"
                        }
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an account and all of its associated transactions.",
                "tags": [
                    "accounts"
                ],
                "summary": "Delete an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/accounts/{id}/anchor": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the anchor balance for an account and sets the anchor date to now.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update account anchor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Anchor Payload (balance only)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SetAnchorRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid request payload or id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/accounts/{id}/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the current calculated balance of an account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get current balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all transaction categories.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new category to the database. If color is omitted, a random one is assigned.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a category by its numeric ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get a single category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Category"
                        }
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a category by its numeric ID.",
                "tags": [
                    "categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Partially updates a category's fields. Only the provided fields will be changed.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update (e.g., {\\",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/dashboard/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculates and returns the sum of current balances across all accounts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get total balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BalanceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/dashboard/debt": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculates and returns the sum of current balances for all 'credit_card' type accounts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get total debt",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DebtResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/dashboard/trends": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns daily aggregated income and expense totals over a specified date range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get income \u0026 expense trends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date for trend data (YYYY-MM-DD)",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date for trend data (YYYY-MM-DD)",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.TrendPoint"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid date format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/receipts/parse": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads a receipt image (JPEG or PNG) and returns the parsed, structured data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receipts"
                ],
                "summary": "Parse a receipt image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Receipt image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Receipt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "returns a paginated and filtered list of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "list transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 25,
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cursor date from previous page (rfc3339nano)",
                        "name": "cursor_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "cursor id from previous page",
                        "name": "cursor_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma-separated list of account ids",
                        "name": "account_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by start date (yyyy-mm-dd)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by end date (yyyy-mm-dd)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "filter by minimum amount",
                        "name": "amount_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "filter by maximum amount",
                        "name": "amount_max",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma-separated list of category slugs",
                        "name": "categories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search merchant name (case-insensitive)",
                        "name": "merchant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search description (case-insensitive)",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by currency code (e.g., CAD)",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by direction ('in' or 'out')",
                        "name": "direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTransactionsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "adds a new transaction to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "create a new transaction",
                "parameters": [
                    {
                        "description": "transaction object",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "duplicate transaction",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "retrieves a transaction by its numeric id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "get a single transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "deletes a transaction by its numeric id",
                "tags": [
                    "transactions"
                ],
                "summary": "delete a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "partially updates a transaction's fields",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "update a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "fields to update",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid request body or id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{id}/categorize": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "re-evaluates and updates the category of a transaction based on its description using AI",
                "tags": [
                    "transactions"
                ],
                "summary": "categorize a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{id}/identify-merchant": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "extracts and updates the merchant name for a transaction based on its description using AI",
                "tags": [
                    "transactions"
                ],
                "summary": "identify merchant for a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "invalid id format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Account": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "anchorBalance": {
                    "type": "number"
                },
                "anchorDate": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.AccountType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domain.AccountType": {
            "type": "string",
            "enum": [
                "chequing",
                "savings",
                "credit_card",
                "investment",
                "other"
            ],
            "x-enum-varnames": [
                "AccountTypeChequing",
                "AccountTypeSavings",
                "AccountTypeCreditCard",
                "AccountTypeInvestment",
                "AccountTypeOther"
            ]
        },
        "domain.Category": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domain.Transaction": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "balanceAfter": {
                    "type": "number"
                },
                "catStatus": {
                    "type": "string"
                },
                "categoryColor": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer"
                },
                "categoryLabel": {
                    "type": "string"
                },
                "categorySlug": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "emailId": {
                    "type": "string"
                },
                "exchangeRate": {
                    "type": "number"
                },
                "foreignAmount": {
                    "type": "number"
                },
                "foreignCurrency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "merchant": {
                    "type": "string"
                },
                "receiptId": {
                    "type": "integer"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "txAmount": {
                    "type": "number"
                },
                "txCurrency": {
                    "type": "string"
                },
                "txDate": {
                    "type": "string"
                },
                "txDesc": {
                    "type": "string"
                },
                "txDirection": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userNotes": {
                    "type": "string"
                }
            }
        },
        "domain.TrendPoint": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "expenses": {
                    "type": "number"
                },
                "income": {
                    "type": "number"
                }
            }
        },
        "handlers.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1234.56
                }
            }
        },
        "handlers.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "main"
                },
                "anchor_balance": {
                    "type": "number",
                    "example": 1234.56
                },
                "bank": {
                    "type": "string",
                    "example": "big bank inc."
                },
                "name": {
                    "type": "string",
                    "example": "main chequing"
                },
                "type": {
                    "type": "string",
                    "example": "chequing"
                }
            }
        },
        "handlers.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#FFD700"
                },
                "label": {
                    "type": "string",
                    "example": "Groceries"
                },
                "slug": {
                    "type": "string",
                    "example": "food.groceries"
                }
            }
        },
        "handlers.CreateCategoryResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 101
                }
            }
        },
        "handlers.CreateTransactionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 101
                }
            }
        },
        "handlers.Cursor": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handlers.DebtResponse": {
            "type": "object",
            "properties": {
                "debt": {
                    "type": "number",
                    "example": 2550.75
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "resource not found"
                }
            }
        },
        "handlers.ListTransactionsResponse": {
            "type": "object",
            "properties": {
                "nextCursor": {
                    "$ref": "#/definitions/handlers.Cursor"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Transaction"
                    }
                }
            }
        },
        "handlers.SetAnchorRequest": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1234.56
                }
            }
        },
        "handlers.UpdateCategoryRequest": {
            "type": "object",
            "additionalProperties": {}
        },
        "handlers.UpdateTransactionRequest": {
            "type": "object",
            "additionalProperties": {}
        },
        "service.Receipt": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "number"
                            },
                            "qty": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "merchant": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and a valid API key.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}