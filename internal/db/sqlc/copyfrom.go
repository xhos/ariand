// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package sqlc

import (
	"context"
)

// iteratorForBulkCreateCategories implements pgx.CopyFromSource.
type iteratorForBulkCreateCategories struct {
	rows                 []BulkCreateCategoriesParams
	skippedFirstNextCall bool
}

func (r *iteratorForBulkCreateCategories) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBulkCreateCategories) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Slug,
		r.rows[0].Label,
		r.rows[0].Color,
	}, nil
}

func (r iteratorForBulkCreateCategories) Err() error {
	return nil
}

func (q *Queries) BulkCreateCategories(ctx context.Context, arg []BulkCreateCategoriesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"categories"}, []string{"slug", "label", "color"}, &iteratorForBulkCreateCategories{rows: arg})
}

// iteratorForBulkCreateReceiptItems implements pgx.CopyFromSource.
type iteratorForBulkCreateReceiptItems struct {
	rows                 []BulkCreateReceiptItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBulkCreateReceiptItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBulkCreateReceiptItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ReceiptID,
		r.rows[0].LineNo,
		r.rows[0].Name,
		r.rows[0].Qty,
		r.rows[0].UnitPrice,
		r.rows[0].LineTotal,
		r.rows[0].Sku,
		r.rows[0].CategoryHint,
	}, nil
}

func (r iteratorForBulkCreateReceiptItems) Err() error {
	return nil
}

func (q *Queries) BulkCreateReceiptItems(ctx context.Context, arg []BulkCreateReceiptItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"receipt_items"}, []string{"receipt_id", "line_no", "name", "qty", "unit_price", "line_total", "sku", "category_hint"}, &iteratorForBulkCreateReceiptItems{rows: arg})
}
