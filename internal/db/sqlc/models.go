// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"time"

	arian "ariand/internal/gen/arian/v1"
	"ariand/internal/types"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

type Account struct {
	ID            int64             `json:"id"`
	OwnerID       uuid.UUID         `json:"owner_id"`
	Name          string            `json:"name"`
	Bank          string            `json:"bank"`
	AccountType   arian.AccountType `json:"account_type"`
	Alias         *string           `json:"alias"`
	AnchorDate    time.Time         `json:"anchor_date"`
	AnchorBalance *types.Money      `json:"anchor_balance"`
	CreatedAt     time.Time         `json:"created_at"`
	UpdatedAt     time.Time         `json:"updated_at"`
	MainCurrency  string            `json:"main_currency"`
	Colors        []string          `json:"colors"`
	Balance       []byte            `json:"balance"`
}

type AccountUser struct {
	AccountID int64     `json:"account_id"`
	UserID    uuid.UUID `json:"user_id"`
	AddedAt   time.Time `json:"added_at"`
}

type Category struct {
	ID        int64     `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	Slug      string    `json:"slug"`
	Color     string    `json:"color"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Receipt struct {
	ID             int64                    `json:"id"`
	Engine         arian.ReceiptEngine      `json:"engine"`
	ParseStatus    arian.ReceiptParseStatus `json:"parse_status"`
	LinkStatus     arian.ReceiptLinkStatus  `json:"link_status"`
	MatchIds       []int64                  `json:"match_ids"`
	Merchant       *string                  `json:"merchant"`
	PurchaseDate   *time.Time               `json:"purchase_date"`
	TotalAmount    *types.Money             `json:"total_amount"`
	TaxAmount      *types.Money             `json:"tax_amount"`
	RawPayload     []byte                   `json:"raw_payload"`
	CanonicalData  []byte                   `json:"canonical_data"`
	ImageUrl       *string                  `json:"image_url"`
	ImageSha256    []byte                   `json:"image_sha256"`
	Lat            *float64                 `json:"lat"`
	Lon            *float64                 `json:"lon"`
	LocationSource *string                  `json:"location_source"`
	LocationLabel  *string                  `json:"location_label"`
	CreatedAt      time.Time                `json:"created_at"`
	UpdatedAt      time.Time                `json:"updated_at"`
}

type ReceiptItem struct {
	ID           int64            `json:"id"`
	ReceiptID    int64            `json:"receipt_id"`
	LineNo       *int32           `json:"line_no"`
	Name         string           `json:"name"`
	Qty          *decimal.Decimal `json:"qty"`
	UnitPrice    *types.Money     `json:"unit_price"`
	LineTotal    *types.Money     `json:"line_total"`
	Sku          *string          `json:"sku"`
	CategoryHint *string          `json:"category_hint"`
	CreatedAt    time.Time        `json:"created_at"`
	UpdatedAt    time.Time        `json:"updated_at"`
}

type Transaction struct {
	ID            int64                      `json:"id"`
	AccountID     int64                      `json:"account_id"`
	EmailID       *string                    `json:"email_id"`
	TxDate        time.Time                  `json:"tx_date"`
	TxAmount      *types.Money               `json:"tx_amount"`
	TxDirection   arian.TransactionDirection `json:"tx_direction"`
	TxDesc        *string                    `json:"tx_desc"`
	BalanceAfter  *types.Money               `json:"balance_after"`
	Merchant      *string                    `json:"merchant"`
	CategoryID    *int64                     `json:"category_id"`
	CatStatus     arian.CategorizationStatus `json:"cat_status"`
	Suggestions   []string                   `json:"suggestions"`
	UserNotes     *string                    `json:"user_notes"`
	ForeignAmount *types.Money               `json:"foreign_amount"`
	ExchangeRate  *decimal.Decimal           `json:"exchange_rate"`
	ReceiptID     *int64                     `json:"receipt_id"`
	CreatedAt     time.Time                  `json:"created_at"`
	UpdatedAt     time.Time                  `json:"updated_at"`
}

type User struct {
	ID               uuid.UUID `json:"id"`
	Email            string    `json:"email"`
	DisplayName      *string   `json:"display_name"`
	DefaultAccountID *int64    `json:"default_account_id"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}
