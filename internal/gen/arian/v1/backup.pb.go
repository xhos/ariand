// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: arian/v1/backup.proto

package arianv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Backup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ExportedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=exported_at,json=exportedAt,proto3" json:"exported_at,omitempty"`
	Categories    []*CategoryData        `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
	Accounts      []*AccountData         `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Transactions  []*TransactionData     `protobuf:"bytes,5,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Rules         []*RuleData            `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Backup) Reset() {
	*x = Backup{}
	mi := &file_arian_v1_backup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_arian_v1_backup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_arian_v1_backup_proto_rawDescGZIP(), []int{0}
}

func (x *Backup) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Backup) GetExportedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExportedAt
	}
	return nil
}

func (x *Backup) GetCategories() []*CategoryData {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Backup) GetAccounts() []*AccountData {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Backup) GetTransactions() []*TransactionData {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Backup) GetRules() []*RuleData {
	if x != nil {
		return x.Rules
	}
	return nil
}

type CategoryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryData) Reset() {
	*x = CategoryData{}
	mi := &file_arian_v1_backup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryData) ProtoMessage() {}

func (x *CategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_arian_v1_backup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryData.ProtoReflect.Descriptor instead.
func (*CategoryData) Descriptor() ([]byte, []int) {
	return file_arian_v1_backup_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryData) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CategoryData) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type AccountData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Bank          string                 `protobuf:"bytes,2,opt,name=bank,proto3" json:"bank,omitempty"`
	AccountType   string                 `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Alias         *string                `protobuf:"bytes,4,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	AnchorDate    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=anchor_date,json=anchorDate,proto3,oneof" json:"anchor_date,omitempty"`
	AnchorBalance *money.Money           `protobuf:"bytes,6,opt,name=anchor_balance,json=anchorBalance,proto3" json:"anchor_balance,omitempty"`
	MainCurrency  string                 `protobuf:"bytes,7,opt,name=main_currency,json=mainCurrency,proto3" json:"main_currency,omitempty"`
	Colors        []string               `protobuf:"bytes,8,rep,name=colors,proto3" json:"colors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountData) Reset() {
	*x = AccountData{}
	mi := &file_arian_v1_backup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountData) ProtoMessage() {}

func (x *AccountData) ProtoReflect() protoreflect.Message {
	mi := &file_arian_v1_backup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountData.ProtoReflect.Descriptor instead.
func (*AccountData) Descriptor() ([]byte, []int) {
	return file_arian_v1_backup_proto_rawDescGZIP(), []int{2}
}

func (x *AccountData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountData) GetBank() string {
	if x != nil {
		return x.Bank
	}
	return ""
}

func (x *AccountData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountData) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *AccountData) GetAnchorDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AnchorDate
	}
	return nil
}

func (x *AccountData) GetAnchorBalance() *money.Money {
	if x != nil {
		return x.AnchorBalance
	}
	return nil
}

func (x *AccountData) GetMainCurrency() string {
	if x != nil {
		return x.MainCurrency
	}
	return ""
}

func (x *AccountData) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

type TransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountName   string                 `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	TxDate        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=tx_date,json=txDate,proto3" json:"tx_date,omitempty"`
	TxAmount      *money.Money           `protobuf:"bytes,3,opt,name=tx_amount,json=txAmount,proto3" json:"tx_amount,omitempty"`
	TxDirection   string                 `protobuf:"bytes,4,opt,name=tx_direction,json=txDirection,proto3" json:"tx_direction,omitempty"`
	TxDesc        *string                `protobuf:"bytes,5,opt,name=tx_desc,json=txDesc,proto3,oneof" json:"tx_desc,omitempty"`
	BalanceAfter  *money.Money           `protobuf:"bytes,6,opt,name=balance_after,json=balanceAfter,proto3,oneof" json:"balance_after,omitempty"`
	Merchant      *string                `protobuf:"bytes,7,opt,name=merchant,proto3,oneof" json:"merchant,omitempty"`
	CategorySlug  *string                `protobuf:"bytes,8,opt,name=category_slug,json=categorySlug,proto3,oneof" json:"category_slug,omitempty"`
	UserNotes     *string                `protobuf:"bytes,9,opt,name=user_notes,json=userNotes,proto3,oneof" json:"user_notes,omitempty"`
	ForeignAmount *money.Money           `protobuf:"bytes,10,opt,name=foreign_amount,json=foreignAmount,proto3,oneof" json:"foreign_amount,omitempty"`
	ExchangeRate  *float64               `protobuf:"fixed64,11,opt,name=exchange_rate,json=exchangeRate,proto3,oneof" json:"exchange_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	mi := &file_arian_v1_backup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_arian_v1_backup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_arian_v1_backup_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TransactionData) GetTxDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TxDate
	}
	return nil
}

func (x *TransactionData) GetTxAmount() *money.Money {
	if x != nil {
		return x.TxAmount
	}
	return nil
}

func (x *TransactionData) GetTxDirection() string {
	if x != nil {
		return x.TxDirection
	}
	return ""
}

func (x *TransactionData) GetTxDesc() string {
	if x != nil && x.TxDesc != nil {
		return *x.TxDesc
	}
	return ""
}

func (x *TransactionData) GetBalanceAfter() *money.Money {
	if x != nil {
		return x.BalanceAfter
	}
	return nil
}

func (x *TransactionData) GetMerchant() string {
	if x != nil && x.Merchant != nil {
		return *x.Merchant
	}
	return ""
}

func (x *TransactionData) GetCategorySlug() string {
	if x != nil && x.CategorySlug != nil {
		return *x.CategorySlug
	}
	return ""
}

func (x *TransactionData) GetUserNotes() string {
	if x != nil && x.UserNotes != nil {
		return *x.UserNotes
	}
	return ""
}

func (x *TransactionData) GetForeignAmount() *money.Money {
	if x != nil {
		return x.ForeignAmount
	}
	return nil
}

func (x *TransactionData) GetExchangeRate() float64 {
	if x != nil && x.ExchangeRate != nil {
		return *x.ExchangeRate
	}
	return 0
}

type RuleData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RuleName       string                 `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	CategorySlug   *string                `protobuf:"bytes,2,opt,name=category_slug,json=categorySlug,proto3,oneof" json:"category_slug,omitempty"`
	Merchant       *string                `protobuf:"bytes,3,opt,name=merchant,proto3,oneof" json:"merchant,omitempty"`
	ConditionsJson string                 `protobuf:"bytes,4,opt,name=conditions_json,json=conditionsJson,proto3" json:"conditions_json,omitempty"`
	IsActive       *bool                  `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	PriorityOrder  *int32                 `protobuf:"varint,6,opt,name=priority_order,json=priorityOrder,proto3,oneof" json:"priority_order,omitempty"`
	RuleSource     *string                `protobuf:"bytes,7,opt,name=rule_source,json=ruleSource,proto3,oneof" json:"rule_source,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RuleData) Reset() {
	*x = RuleData{}
	mi := &file_arian_v1_backup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleData) ProtoMessage() {}

func (x *RuleData) ProtoReflect() protoreflect.Message {
	mi := &file_arian_v1_backup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleData.ProtoReflect.Descriptor instead.
func (*RuleData) Descriptor() ([]byte, []int) {
	return file_arian_v1_backup_proto_rawDescGZIP(), []int{4}
}

func (x *RuleData) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *RuleData) GetCategorySlug() string {
	if x != nil && x.CategorySlug != nil {
		return *x.CategorySlug
	}
	return ""
}

func (x *RuleData) GetMerchant() string {
	if x != nil && x.Merchant != nil {
		return *x.Merchant
	}
	return ""
}

func (x *RuleData) GetConditionsJson() string {
	if x != nil {
		return x.ConditionsJson
	}
	return ""
}

func (x *RuleData) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *RuleData) GetPriorityOrder() int32 {
	if x != nil && x.PriorityOrder != nil {
		return *x.PriorityOrder
	}
	return 0
}

func (x *RuleData) GetRuleSource() string {
	if x != nil && x.RuleSource != nil {
		return *x.RuleSource
	}
	return ""
}

var File_arian_v1_backup_proto protoreflect.FileDescriptor

const file_arian_v1_backup_proto_rawDesc = "" +
	"\n" +
	"\x15arian/v1/backup.proto\x12\barian.v1\x1a\x14arian/v1/enums.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/type/money.proto\"\xb3\x02\n" +
	"\x06Backup\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12;\n" +
	"\vexported_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"exportedAt\x126\n" +
	"\n" +
	"categories\x18\x03 \x03(\v2\x16.arian.v1.CategoryDataR\n" +
	"categories\x121\n" +
	"\baccounts\x18\x04 \x03(\v2\x15.arian.v1.AccountDataR\baccounts\x12=\n" +
	"\ftransactions\x18\x05 \x03(\v2\x19.arian.v1.TransactionDataR\ftransactions\x12(\n" +
	"\x05rules\x18\x06 \x03(\v2\x12.arian.v1.RuleDataR\x05rules\"J\n" +
	"\fCategoryData\x12\x1b\n" +
	"\x04slug\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04slug\x12\x1d\n" +
	"\x05color\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05color\"\xf3\x02\n" +
	"\vAccountData\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04bank\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04bank\x12*\n" +
	"\faccount_type\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vaccountType\x12\x19\n" +
	"\x05alias\x18\x04 \x01(\tH\x00R\x05alias\x88\x01\x01\x12@\n" +
	"\vanchor_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"anchorDate\x88\x01\x01\x12A\n" +
	"\x0eanchor_balance\x18\x06 \x01(\v2\x12.google.type.MoneyB\x06\xbaH\x03\xc8\x01\x01R\ranchorBalance\x12,\n" +
	"\rmain_currency\x18\a \x01(\tB\a\xbaH\x04r\x02\x10\x03R\fmainCurrency\x12\x16\n" +
	"\x06colors\x18\b \x03(\tR\x06colorsB\b\n" +
	"\x06_aliasB\x0e\n" +
	"\f_anchor_date\"\x85\x05\n" +
	"\x0fTransactionData\x12*\n" +
	"\faccount_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vaccountName\x12;\n" +
	"\atx_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\x06txDate\x127\n" +
	"\ttx_amount\x18\x03 \x01(\v2\x12.google.type.MoneyB\x06\xbaH\x03\xc8\x01\x01R\btxAmount\x12*\n" +
	"\ftx_direction\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vtxDirection\x12\x1c\n" +
	"\atx_desc\x18\x05 \x01(\tH\x00R\x06txDesc\x88\x01\x01\x12<\n" +
	"\rbalance_after\x18\x06 \x01(\v2\x12.google.type.MoneyH\x01R\fbalanceAfter\x88\x01\x01\x12\x1f\n" +
	"\bmerchant\x18\a \x01(\tH\x02R\bmerchant\x88\x01\x01\x12(\n" +
	"\rcategory_slug\x18\b \x01(\tH\x03R\fcategorySlug\x88\x01\x01\x12\"\n" +
	"\n" +
	"user_notes\x18\t \x01(\tH\x04R\tuserNotes\x88\x01\x01\x12>\n" +
	"\x0eforeign_amount\x18\n" +
	" \x01(\v2\x12.google.type.MoneyH\x05R\rforeignAmount\x88\x01\x01\x12(\n" +
	"\rexchange_rate\x18\v \x01(\x01H\x06R\fexchangeRate\x88\x01\x01B\n" +
	"\n" +
	"\b_tx_descB\x10\n" +
	"\x0e_balance_afterB\v\n" +
	"\t_merchantB\x10\n" +
	"\x0e_category_slugB\r\n" +
	"\v_user_notesB\x11\n" +
	"\x0f_foreign_amountB\x10\n" +
	"\x0e_exchange_rate\"\xf1\x02\n" +
	"\bRuleData\x12$\n" +
	"\trule_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bruleName\x12(\n" +
	"\rcategory_slug\x18\x02 \x01(\tH\x00R\fcategorySlug\x88\x01\x01\x12\x1f\n" +
	"\bmerchant\x18\x03 \x01(\tH\x01R\bmerchant\x88\x01\x01\x120\n" +
	"\x0fconditions_json\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0econditionsJson\x12 \n" +
	"\tis_active\x18\x05 \x01(\bH\x02R\bisActive\x88\x01\x01\x12*\n" +
	"\x0epriority_order\x18\x06 \x01(\x05H\x03R\rpriorityOrder\x88\x01\x01\x12$\n" +
	"\vrule_source\x18\a \x01(\tH\x04R\n" +
	"ruleSource\x88\x01\x01B\x10\n" +
	"\x0e_category_slugB\v\n" +
	"\t_merchantB\f\n" +
	"\n" +
	"_is_activeB\x11\n" +
	"\x0f_priority_orderB\x0e\n" +
	"\f_rule_sourceB\x82\x01\n" +
	"\fcom.arian.v1B\vBackupProtoP\x01Z$ariand/internal/gen/arian/v1;arianv1\xa2\x02\x03AXX\xaa\x02\bArian.V1\xca\x02\bArian\\V1\xe2\x02\x14Arian\\V1\\GPBMetadata\xea\x02\tArian::V1b\x06proto3"

var (
	file_arian_v1_backup_proto_rawDescOnce sync.Once
	file_arian_v1_backup_proto_rawDescData []byte
)

func file_arian_v1_backup_proto_rawDescGZIP() []byte {
	file_arian_v1_backup_proto_rawDescOnce.Do(func() {
		file_arian_v1_backup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_arian_v1_backup_proto_rawDesc), len(file_arian_v1_backup_proto_rawDesc)))
	})
	return file_arian_v1_backup_proto_rawDescData
}

var file_arian_v1_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_arian_v1_backup_proto_goTypes = []any{
	(*Backup)(nil),                // 0: arian.v1.Backup
	(*CategoryData)(nil),          // 1: arian.v1.CategoryData
	(*AccountData)(nil),           // 2: arian.v1.AccountData
	(*TransactionData)(nil),       // 3: arian.v1.TransactionData
	(*RuleData)(nil),              // 4: arian.v1.RuleData
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*money.Money)(nil),           // 6: google.type.Money
}
var file_arian_v1_backup_proto_depIdxs = []int32{
	5,  // 0: arian.v1.Backup.exported_at:type_name -> google.protobuf.Timestamp
	1,  // 1: arian.v1.Backup.categories:type_name -> arian.v1.CategoryData
	2,  // 2: arian.v1.Backup.accounts:type_name -> arian.v1.AccountData
	3,  // 3: arian.v1.Backup.transactions:type_name -> arian.v1.TransactionData
	4,  // 4: arian.v1.Backup.rules:type_name -> arian.v1.RuleData
	5,  // 5: arian.v1.AccountData.anchor_date:type_name -> google.protobuf.Timestamp
	6,  // 6: arian.v1.AccountData.anchor_balance:type_name -> google.type.Money
	5,  // 7: arian.v1.TransactionData.tx_date:type_name -> google.protobuf.Timestamp
	6,  // 8: arian.v1.TransactionData.tx_amount:type_name -> google.type.Money
	6,  // 9: arian.v1.TransactionData.balance_after:type_name -> google.type.Money
	6,  // 10: arian.v1.TransactionData.foreign_amount:type_name -> google.type.Money
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_arian_v1_backup_proto_init() }
func file_arian_v1_backup_proto_init() {
	if File_arian_v1_backup_proto != nil {
		return
	}
	file_arian_v1_enums_proto_init()
	file_arian_v1_backup_proto_msgTypes[2].OneofWrappers = []any{}
	file_arian_v1_backup_proto_msgTypes[3].OneofWrappers = []any{}
	file_arian_v1_backup_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_arian_v1_backup_proto_rawDesc), len(file_arian_v1_backup_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_arian_v1_backup_proto_goTypes,
		DependencyIndexes: file_arian_v1_backup_proto_depIdxs,
		MessageInfos:      file_arian_v1_backup_proto_msgTypes,
	}.Build()
	File_arian_v1_backup_proto = out.File
	file_arian_v1_backup_proto_goTypes = nil
	file_arian_v1_backup_proto_depIdxs = nil
}
